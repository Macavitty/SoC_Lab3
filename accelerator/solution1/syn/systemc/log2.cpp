// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "log2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic log2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic log2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<52> log2::ap_ST_fsm_state1 = "1";
const sc_lv<52> log2::ap_ST_fsm_state2 = "10";
const sc_lv<52> log2::ap_ST_fsm_state3 = "100";
const sc_lv<52> log2::ap_ST_fsm_state4 = "1000";
const sc_lv<52> log2::ap_ST_fsm_state5 = "10000";
const sc_lv<52> log2::ap_ST_fsm_state6 = "100000";
const sc_lv<52> log2::ap_ST_fsm_state7 = "1000000";
const sc_lv<52> log2::ap_ST_fsm_state8 = "10000000";
const sc_lv<52> log2::ap_ST_fsm_state9 = "100000000";
const sc_lv<52> log2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<52> log2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<52> log2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<52> log2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<52> log2::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<52> log2::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<52> log2::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_pp0_stage0 = "100000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_pp0_stage1 = "1000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_pp0_stage2 = "10000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_pp0_stage3 = "100000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_pp0_stage4 = "1000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state54 = "10000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state55 = "100000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state56 = "1000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state57 = "10000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state58 = "100000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state59 = "1000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state60 = "10000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state61 = "100000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state62 = "1000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state63 = "10000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state64 = "100000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state65 = "1000000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state66 = "10000000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state67 = "100000000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state68 = "1000000000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state69 = "10000000000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state70 = "100000000000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state71 = "1000000000000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state72 = "10000000000000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state73 = "100000000000000000000000000000000000000000000000000";
const sc_lv<52> log2::ap_ST_fsm_state74 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<32> log2::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool log2::ap_const_boolean_1 = true;
const int log2::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> log2::ap_const_lv32_1B = "11011";
const bool log2::ap_const_boolean_0 = false;
const sc_lv<32> log2::ap_const_lv32_5 = "101";
const sc_lv<1> log2::ap_const_lv1_0 = "0";
const sc_lv<32> log2::ap_const_lv32_23 = "100011";
const sc_lv<32> log2::ap_const_lv32_15 = "10101";
const sc_lv<32> log2::ap_const_lv32_19 = "11001";
const sc_lv<32> log2::ap_const_lv32_1A = "11010";
const sc_lv<32> log2::ap_const_lv32_1E = "11110";
const sc_lv<1> log2::ap_const_lv1_1 = "1";
const sc_lv<6> log2::ap_const_lv6_1 = "1";
const sc_lv<5> log2::ap_const_lv5_0 = "00000";
const sc_lv<32> log2::ap_const_lv32_33 = "110011";
const sc_lv<32> log2::ap_const_lv32_BF800000 = "10111111100000000000000000000000";
const sc_lv<32> log2::ap_const_lv32_1 = "1";
const sc_lv<32> log2::ap_const_lv32_1C = "11100";
const sc_lv<32> log2::ap_const_lv32_1F = "11111";
const sc_lv<32> log2::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> log2::ap_const_lv32_16 = "10110";
const sc_lv<32> log2::ap_const_lv32_3F317218 = "111111001100010111001000011000";
const sc_lv<32> log2::ap_const_lv32_6 = "110";
const sc_lv<32> log2::ap_const_lv32_24 = "100100";
const sc_lv<5> log2::ap_const_lv5_15 = "10101";
const sc_lv<5> log2::ap_const_lv5_1 = "1";
const sc_lv<6> log2::ap_const_lv6_2 = "10";

log2::log2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    log2_AXILiteS_s_axi_U = new log2_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("log2_AXILiteS_s_axi_U");
    log2_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    log2_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    log2_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    log2_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    log2_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    log2_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    log2_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    log2_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    log2_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    log2_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    log2_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    log2_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    log2_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    log2_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    log2_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    log2_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    log2_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    log2_AXILiteS_s_axi_U->ACLK(ap_clk);
    log2_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    log2_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    log2_AXILiteS_s_axi_U->ap_start(ap_start);
    log2_AXILiteS_s_axi_U->interrupt(interrupt);
    log2_AXILiteS_s_axi_U->ap_ready(ap_ready);
    log2_AXILiteS_s_axi_U->ap_done(ap_done);
    log2_AXILiteS_s_axi_U->ap_idle(ap_idle);
    log2_AXILiteS_s_axi_U->x(x);
    log2_AXILiteS_s_axi_U->y(grp_fu_131_p2);
    log2_AXILiteS_s_axi_U->y_ap_vld(y_ap_vld);
    log2_fadd_32ns_32bkb_U1 = new log2_fadd_32ns_32bkb<1,5,32,32,32>("log2_fadd_32ns_32bkb_U1");
    log2_fadd_32ns_32bkb_U1->clk(ap_clk);
    log2_fadd_32ns_32bkb_U1->reset(ap_rst_n_inv);
    log2_fadd_32ns_32bkb_U1->din0(grp_fu_114_p0);
    log2_fadd_32ns_32bkb_U1->din1(grp_fu_114_p1);
    log2_fadd_32ns_32bkb_U1->ce(ap_var_for_const0);
    log2_fadd_32ns_32bkb_U1->dout(grp_fu_114_p2);
    log2_fadd_32ns_32bkb_U2 = new log2_fadd_32ns_32bkb<1,5,32,32,32>("log2_fadd_32ns_32bkb_U2");
    log2_fadd_32ns_32bkb_U2->clk(ap_clk);
    log2_fadd_32ns_32bkb_U2->reset(ap_rst_n_inv);
    log2_fadd_32ns_32bkb_U2->din0(x_read_reg_170);
    log2_fadd_32ns_32bkb_U2->din1(ap_var_for_const1);
    log2_fadd_32ns_32bkb_U2->ce(ap_var_for_const0);
    log2_fadd_32ns_32bkb_U2->dout(grp_fu_119_p2);
    log2_fmul_32ns_32cud_U3 = new log2_fmul_32ns_32cud<1,4,32,32,32>("log2_fmul_32ns_32cud_U3");
    log2_fmul_32ns_32cud_U3->clk(ap_clk);
    log2_fmul_32ns_32cud_U3->reset(ap_rst_n_inv);
    log2_fmul_32ns_32cud_U3->din0(grp_fu_126_p0);
    log2_fmul_32ns_32cud_U3->din1(grp_fu_126_p1);
    log2_fmul_32ns_32cud_U3->ce(ap_var_for_const0);
    log2_fmul_32ns_32cud_U3->dout(grp_fu_126_p2);
    log2_fdiv_32ns_32dEe_U4 = new log2_fdiv_32ns_32dEe<1,16,32,32,32>("log2_fdiv_32ns_32dEe_U4");
    log2_fdiv_32ns_32dEe_U4->clk(ap_clk);
    log2_fdiv_32ns_32dEe_U4->reset(ap_rst_n_inv);
    log2_fdiv_32ns_32dEe_U4->din0(grp_fu_131_p0);
    log2_fdiv_32ns_32dEe_U4->din1(grp_fu_131_p1);
    log2_fdiv_32ns_32dEe_U4->ce(ap_var_for_const0);
    log2_fdiv_32ns_32dEe_U4->dout(grp_fu_131_p2);
    log2_sitofp_32ns_eOg_U5 = new log2_sitofp_32ns_eOg<1,6,32,32>("log2_sitofp_32ns_eOg_U5");
    log2_sitofp_32ns_eOg_U5->clk(ap_clk);
    log2_sitofp_32ns_eOg_U5->reset(ap_rst_n_inv);
    log2_sitofp_32ns_eOg_U5->din0(grp_fu_138_p0);
    log2_sitofp_32ns_eOg_U5->ce(ap_var_for_const0);
    log2_sitofp_32ns_eOg_U5->dout(grp_fu_138_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_state27_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state28_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state29_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state30_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state31_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state32_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state33_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state34_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state35_pp0_stage3_iter1);

    SC_METHOD(thread_ap_block_state36_pp0_stage4_iter1);

    SC_METHOD(thread_ap_block_state37_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state38_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state39_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state40_pp0_stage3_iter2);

    SC_METHOD(thread_ap_block_state41_pp0_stage4_iter2);

    SC_METHOD(thread_ap_block_state42_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state43_pp0_stage1_iter3);

    SC_METHOD(thread_ap_block_state44_pp0_stage2_iter3);

    SC_METHOD(thread_ap_block_state45_pp0_stage3_iter3);

    SC_METHOD(thread_ap_block_state46_pp0_stage4_iter3);

    SC_METHOD(thread_ap_block_state47_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state48_pp0_stage1_iter4);

    SC_METHOD(thread_ap_block_state49_pp0_stage2_iter4);

    SC_METHOD(thread_ap_block_state50_pp0_stage3_iter4);

    SC_METHOD(thread_ap_block_state51_pp0_stage4_iter4);

    SC_METHOD(thread_ap_block_state52_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state53_pp0_stage1_iter5);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state27);
    sensitive << ( icmp_ln15_fu_147_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state74 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_phi_mux_empty_phi_fu_73_p4);
    sensitive << ( empty_reg_69 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_107_p4);
    sensitive << ( i_0_reg_103 );
    sensitive << ( icmp_ln15_reg_193 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_197 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_k_0_phi_fu_85_p4);
    sensitive << ( k_0_reg_81 );
    sensitive << ( icmp_ln15_reg_193 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( k_reg_207 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_pow_b_0_phi_fu_96_p4);
    sensitive << ( pow_b_0_reg_93 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( icmp_ln15_reg_193_pp0_iter2_reg );
    sensitive << ( pow_b_1_reg_217 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state74 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_grp_fu_114_p0);
    sensitive << ( empty_reg_69 );
    sensitive << ( x_read_reg_170 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_phi_mux_empty_phi_fu_73_p4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_state54 );

    SC_METHOD(thread_grp_fu_114_p1);
    sensitive << ( empty_reg_69 );
    sensitive << ( a_reg_222 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_state54 );

    SC_METHOD(thread_grp_fu_126_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( b_reg_181 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_phi_mux_pow_b_0_phi_fu_96_p4 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_grp_fu_126_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( b_reg_181 );
    sensitive << ( tmp_3_reg_188 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_grp_fu_131_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( reg_141 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_phi_mux_pow_b_0_phi_fu_96_p4 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state59 );

    SC_METHOD(thread_grp_fu_131_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_2_reg_176 );
    sensitive << ( tmp_6_reg_212 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state59 );

    SC_METHOD(thread_grp_fu_138_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_k_0_phi_fu_85_p4 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_i_fu_153_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_107_p4 );

    SC_METHOD(thread_icmp_ln15_fu_147_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_107_p4 );

    SC_METHOD(thread_k_fu_164_p2);
    sensitive << ( k_0_reg_81 );

    SC_METHOD(thread_y_ap_vld);
    sensitive << ( ap_CS_fsm_state74 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( icmp_ln15_fu_147_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000001";
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "log2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, x, "x");
    sc_trace(mVcdFile, y_ap_vld, "y_ap_vld");
    sc_trace(mVcdFile, empty_reg_69, "empty_reg_69");
    sc_trace(mVcdFile, k_0_reg_81, "k_0_reg_81");
    sc_trace(mVcdFile, pow_b_0_reg_93, "pow_b_0_reg_93");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage1_iter0, "ap_block_state28_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state33_pp0_stage1_iter1, "ap_block_state33_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state38_pp0_stage1_iter2, "ap_block_state38_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state43_pp0_stage1_iter3, "ap_block_state43_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state48_pp0_stage1_iter4, "ap_block_state48_pp0_stage1_iter4");
    sc_trace(mVcdFile, ap_block_state53_pp0_stage1_iter5, "ap_block_state53_pp0_stage1_iter5");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, i_0_reg_103, "i_0_reg_103");
    sc_trace(mVcdFile, grp_fu_114_p2, "grp_fu_114_p2");
    sc_trace(mVcdFile, reg_141, "reg_141");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, icmp_ln15_reg_193, "icmp_ln15_reg_193");
    sc_trace(mVcdFile, icmp_ln15_reg_193_pp0_iter5_reg, "icmp_ln15_reg_193_pp0_iter5_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, x_read_reg_170, "x_read_reg_170");
    sc_trace(mVcdFile, grp_fu_119_p2, "grp_fu_119_p2");
    sc_trace(mVcdFile, tmp_2_reg_176, "tmp_2_reg_176");
    sc_trace(mVcdFile, grp_fu_131_p2, "grp_fu_131_p2");
    sc_trace(mVcdFile, b_reg_181, "b_reg_181");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_126_p2, "grp_fu_126_p2");
    sc_trace(mVcdFile, tmp_3_reg_188, "tmp_3_reg_188");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, icmp_ln15_fu_147_p2, "icmp_ln15_fu_147_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage0_iter0, "ap_block_state27_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage0_iter1, "ap_block_state32_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state37_pp0_stage0_iter2, "ap_block_state37_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state42_pp0_stage0_iter3, "ap_block_state42_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state47_pp0_stage0_iter4, "ap_block_state47_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state52_pp0_stage0_iter5, "ap_block_state52_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln15_reg_193_pp0_iter1_reg, "icmp_ln15_reg_193_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln15_reg_193_pp0_iter2_reg, "icmp_ln15_reg_193_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln15_reg_193_pp0_iter3_reg, "icmp_ln15_reg_193_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln15_reg_193_pp0_iter4_reg, "icmp_ln15_reg_193_pp0_iter4_reg");
    sc_trace(mVcdFile, i_fu_153_p2, "i_fu_153_p2");
    sc_trace(mVcdFile, i_reg_197, "i_reg_197");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, k_fu_164_p2, "k_fu_164_p2");
    sc_trace(mVcdFile, k_reg_207, "k_reg_207");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage4_iter0, "ap_block_state31_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state36_pp0_stage4_iter1, "ap_block_state36_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_state41_pp0_stage4_iter2, "ap_block_state41_pp0_stage4_iter2");
    sc_trace(mVcdFile, ap_block_state46_pp0_stage4_iter3, "ap_block_state46_pp0_stage4_iter3");
    sc_trace(mVcdFile, ap_block_state51_pp0_stage4_iter4, "ap_block_state51_pp0_stage4_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, grp_fu_138_p1, "grp_fu_138_p1");
    sc_trace(mVcdFile, tmp_6_reg_212, "tmp_6_reg_212");
    sc_trace(mVcdFile, pow_b_1_reg_217, "pow_b_1_reg_217");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, a_reg_222, "a_reg_222");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state27, "ap_condition_pp0_exit_iter0_state27");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_phi_mux_empty_phi_fu_73_p4, "ap_phi_mux_empty_phi_fu_73_p4");
    sc_trace(mVcdFile, ap_phi_mux_k_0_phi_fu_85_p4, "ap_phi_mux_k_0_phi_fu_85_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_pow_b_0_phi_fu_96_p4, "ap_phi_mux_pow_b_0_phi_fu_96_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_107_p4, "ap_phi_mux_i_0_phi_fu_107_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, grp_fu_114_p0, "grp_fu_114_p0");
    sc_trace(mVcdFile, grp_fu_114_p1, "grp_fu_114_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, grp_fu_126_p0, "grp_fu_126_p0");
    sc_trace(mVcdFile, grp_fu_126_p1, "grp_fu_126_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, grp_fu_131_p0, "grp_fu_131_p0");
    sc_trace(mVcdFile, grp_fu_131_p1, "grp_fu_131_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, grp_fu_138_p0, "grp_fu_138_p0");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage2_iter0, "ap_block_state29_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state34_pp0_stage2_iter1, "ap_block_state34_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state39_pp0_stage2_iter2, "ap_block_state39_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_state44_pp0_stage2_iter3, "ap_block_state44_pp0_stage2_iter3");
    sc_trace(mVcdFile, ap_block_state49_pp0_stage2_iter4, "ap_block_state49_pp0_stage2_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage3_iter0, "ap_block_state30_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state35_pp0_stage3_iter1, "ap_block_state35_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_state40_pp0_stage3_iter2, "ap_block_state40_pp0_stage3_iter2");
    sc_trace(mVcdFile, ap_block_state45_pp0_stage3_iter3, "ap_block_state45_pp0_stage3_iter3");
    sc_trace(mVcdFile, ap_block_state50_pp0_stage3_iter4, "ap_block_state50_pp0_stage3_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("log2.hdltvin.dat");
    mHdltvoutHandle.open("log2.hdltvout.dat");
}

log2::~log2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete log2_AXILiteS_s_axi_U;
    delete log2_fadd_32ns_32bkb_U1;
    delete log2_fadd_32ns_32bkb_U2;
    delete log2_fmul_32ns_32cud_U3;
    delete log2_fdiv_32ns_32dEe_U4;
    delete log2_sitofp_32ns_eOg_U5;
}

void log2::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void log2::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3F800000;
}

void log2::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state27.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
            ap_enable_reg_pp0_iter5 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(icmp_ln15_reg_193_pp0_iter5_reg.read(), ap_const_lv1_0))) {
        empty_reg_69 = grp_fu_114_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        empty_reg_69 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln15_reg_193.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_103 = i_reg_197.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        i_0_reg_103 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln15_reg_193.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        k_0_reg_81 = k_reg_207.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        k_0_reg_81 = ap_const_lv6_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_193_pp0_iter2_reg.read()))) {
        pow_b_0_reg_93 = pow_b_1_reg_217.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        pow_b_0_reg_93 = b_reg_181.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_193_pp0_iter4_reg.read()))) {
        a_reg_222 = grp_fu_131_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        b_reg_181 = grp_fu_131_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_197 = i_fu_153_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln15_reg_193 = icmp_ln15_fu_147_p2.read();
        icmp_ln15_reg_193_pp0_iter1_reg = icmp_ln15_reg_193.read();
        icmp_ln15_reg_193_pp0_iter2_reg = icmp_ln15_reg_193_pp0_iter1_reg.read();
        icmp_ln15_reg_193_pp0_iter3_reg = icmp_ln15_reg_193_pp0_iter2_reg.read();
        icmp_ln15_reg_193_pp0_iter4_reg = icmp_ln15_reg_193_pp0_iter3_reg.read();
        icmp_ln15_reg_193_pp0_iter5_reg = icmp_ln15_reg_193_pp0_iter4_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln15_reg_193.read(), ap_const_lv1_0))) {
        k_reg_207 = k_fu_164_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_193_pp0_iter1_reg.read()))) {
        pow_b_1_reg_217 = grp_fu_126_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(icmp_ln15_reg_193_pp0_iter5_reg.read(), ap_const_lv1_0)) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        reg_141 = grp_fu_114_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_2_reg_176 = grp_fu_119_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        tmp_3_reg_188 = grp_fu_126_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln15_reg_193.read(), ap_const_lv1_0))) {
        tmp_6_reg_212 = grp_fu_138_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_read_reg_170 = x.read();
    }
}

void log2::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[26];
}

void log2::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[27];
}

void log2::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[28];
}

void log2::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[30];
}

void log2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void log2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void log2::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void log2::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void log2::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void log2::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[31];
}

void log2::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[35];
}

void log2::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[36];
}

void log2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void log2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void log2::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[51];
}

void log2::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state27_pp0_stage0_iter0() {
    ap_block_state27_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state28_pp0_stage1_iter0() {
    ap_block_state28_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state29_pp0_stage2_iter0() {
    ap_block_state29_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state30_pp0_stage3_iter0() {
    ap_block_state30_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state31_pp0_stage4_iter0() {
    ap_block_state31_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state32_pp0_stage0_iter1() {
    ap_block_state32_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state33_pp0_stage1_iter1() {
    ap_block_state33_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state34_pp0_stage2_iter1() {
    ap_block_state34_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state35_pp0_stage3_iter1() {
    ap_block_state35_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state36_pp0_stage4_iter1() {
    ap_block_state36_pp0_stage4_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state37_pp0_stage0_iter2() {
    ap_block_state37_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state38_pp0_stage1_iter2() {
    ap_block_state38_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state39_pp0_stage2_iter2() {
    ap_block_state39_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state40_pp0_stage3_iter2() {
    ap_block_state40_pp0_stage3_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state41_pp0_stage4_iter2() {
    ap_block_state41_pp0_stage4_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state42_pp0_stage0_iter3() {
    ap_block_state42_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state43_pp0_stage1_iter3() {
    ap_block_state43_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state44_pp0_stage2_iter3() {
    ap_block_state44_pp0_stage2_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state45_pp0_stage3_iter3() {
    ap_block_state45_pp0_stage3_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state46_pp0_stage4_iter3() {
    ap_block_state46_pp0_stage4_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state47_pp0_stage0_iter4() {
    ap_block_state47_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state48_pp0_stage1_iter4() {
    ap_block_state48_pp0_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state49_pp0_stage2_iter4() {
    ap_block_state49_pp0_stage2_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state50_pp0_stage3_iter4() {
    ap_block_state50_pp0_stage3_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state51_pp0_stage4_iter4() {
    ap_block_state51_pp0_stage4_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state52_pp0_stage0_iter5() {
    ap_block_state52_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_block_state53_pp0_stage1_iter5() {
    ap_block_state53_pp0_stage1_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void log2::thread_ap_condition_pp0_exit_iter0_state27() {
    if (esl_seteq<1,1,1>(icmp_ln15_fu_147_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state27 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state27 = ap_const_logic_0;
    }
}

void log2::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void log2::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void log2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void log2::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void log2::thread_ap_phi_mux_empty_phi_fu_73_p4() {
    ap_phi_mux_empty_phi_fu_73_p4 = empty_reg_69.read();
}

void log2::thread_ap_phi_mux_i_0_phi_fu_107_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln15_reg_193.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_107_p4 = i_reg_197.read();
    } else {
        ap_phi_mux_i_0_phi_fu_107_p4 = i_0_reg_103.read();
    }
}

void log2::thread_ap_phi_mux_k_0_phi_fu_85_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln15_reg_193.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_k_0_phi_fu_85_p4 = k_reg_207.read();
    } else {
        ap_phi_mux_k_0_phi_fu_85_p4 = k_0_reg_81.read();
    }
}

void log2::thread_ap_phi_mux_pow_b_0_phi_fu_96_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_reg_193_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        ap_phi_mux_pow_b_0_phi_fu_96_p4 = pow_b_1_reg_217.read();
    } else {
        ap_phi_mux_pow_b_0_phi_fu_96_p4 = pow_b_0_reg_93.read();
    }
}

void log2::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void log2::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void log2::thread_grp_fu_114_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        grp_fu_114_p0 = empty_reg_69.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_114_p0 = ap_phi_mux_empty_phi_fu_73_p4.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_114_p0 = x_read_reg_170.read();
    } else {
        grp_fu_114_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void log2::thread_grp_fu_114_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        grp_fu_114_p1 = empty_reg_69.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_114_p1 = a_reg_222.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_114_p1 = ap_const_lv32_BF800000;
    } else {
        grp_fu_114_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void log2::thread_grp_fu_126_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_126_p0 = ap_phi_mux_pow_b_0_phi_fu_96_p4.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_fu_126_p0 = b_reg_181.read();
    } else {
        grp_fu_126_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void log2::thread_grp_fu_126_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_126_p1 = tmp_3_reg_188.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_fu_126_p1 = b_reg_181.read();
    } else {
        grp_fu_126_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void log2::thread_grp_fu_131_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_131_p0 = ap_phi_mux_pow_b_0_phi_fu_96_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
        grp_fu_131_p0 = reg_141.read();
    } else {
        grp_fu_131_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void log2::thread_grp_fu_131_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        grp_fu_131_p1 = ap_const_lv32_3F317218;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_131_p1 = tmp_6_reg_212.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_131_p1 = tmp_2_reg_176.read();
    } else {
        grp_fu_131_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void log2::thread_grp_fu_138_p0() {
    grp_fu_138_p0 = esl_zext<32,6>(ap_phi_mux_k_0_phi_fu_85_p4.read());
}

void log2::thread_i_fu_153_p2() {
    i_fu_153_p2 = (!ap_phi_mux_i_0_phi_fu_107_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_i_0_phi_fu_107_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void log2::thread_icmp_ln15_fu_147_p2() {
    icmp_ln15_fu_147_p2 = (!ap_phi_mux_i_0_phi_fu_107_p4.read().is_01() || !ap_const_lv5_15.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_107_p4.read() == ap_const_lv5_15);
}

void log2::thread_k_fu_164_p2() {
    k_fu_164_p2 = (!k_0_reg_81.read().is_01() || !ap_const_lv6_2.is_01())? sc_lv<6>(): (sc_biguint<6>(k_0_reg_81.read()) + sc_biguint<6>(ap_const_lv6_2));
}

void log2::thread_y_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        y_ap_vld = ap_const_logic_1;
    } else {
        y_ap_vld = ap_const_logic_0;
    }
}

void log2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln15_fu_147_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln15_fu_147_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state54;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state54;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 268435456 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 536870912 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 1073741824 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state55;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state57;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state58;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state59;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state60;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state61;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state62;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state63;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state64;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state65;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state66;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state67;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state68;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state69;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state70;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state71;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state72;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state73;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_fsm_state74;
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<52>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void log2::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

