// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _log2_HH_
#define _log2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "log2_fadd_32ns_32bkb.h"
#include "log2_fmul_32ns_32cud.h"
#include "log2_fdiv_32ns_32dEe.h"
#include "log2_sitofp_32ns_eOg.h"
#include "log2_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct log2 : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    log2(sc_module_name name);
    SC_HAS_PROCESS(log2);

    ~log2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    log2_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* log2_AXILiteS_s_axi_U;
    log2_fadd_32ns_32bkb<1,5,32,32,32>* log2_fadd_32ns_32bkb_U1;
    log2_fadd_32ns_32bkb<1,5,32,32,32>* log2_fadd_32ns_32bkb_U2;
    log2_fmul_32ns_32cud<1,4,32,32,32>* log2_fmul_32ns_32cud_U3;
    log2_fdiv_32ns_32dEe<1,16,32,32,32>* log2_fdiv_32ns_32dEe_U4;
    log2_sitofp_32ns_eOg<1,6,32,32>* log2_sitofp_32ns_eOg_U5;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<52> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > x;
    sc_signal< sc_logic > y_ap_vld;
    sc_signal< sc_lv<32> > empty_reg_69;
    sc_signal< sc_lv<6> > k_0_reg_81;
    sc_signal< sc_lv<32> > pow_b_0_reg_93;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state28_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state33_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state38_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state43_pp0_stage1_iter3;
    sc_signal< bool > ap_block_state48_pp0_stage1_iter4;
    sc_signal< bool > ap_block_state53_pp0_stage1_iter5;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<5> > i_0_reg_103;
    sc_signal< sc_lv<32> > grp_fu_114_p2;
    sc_signal< sc_lv<32> > reg_141;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_lv<1> > icmp_ln15_reg_193;
    sc_signal< sc_lv<1> > icmp_ln15_reg_193_pp0_iter5_reg;
    sc_signal< sc_logic > ap_CS_fsm_state58;
    sc_signal< sc_lv<32> > x_read_reg_170;
    sc_signal< sc_lv<32> > grp_fu_119_p2;
    sc_signal< sc_lv<32> > tmp_2_reg_176;
    sc_signal< sc_lv<32> > grp_fu_131_p2;
    sc_signal< sc_lv<32> > b_reg_181;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > grp_fu_126_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_188;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<1> > icmp_ln15_fu_147_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state32_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state37_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state42_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state47_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state52_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln15_reg_193_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln15_reg_193_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln15_reg_193_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln15_reg_193_pp0_iter4_reg;
    sc_signal< sc_lv<5> > i_fu_153_p2;
    sc_signal< sc_lv<5> > i_reg_197;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > k_fu_164_p2;
    sc_signal< sc_lv<6> > k_reg_207;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state31_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state36_pp0_stage4_iter1;
    sc_signal< bool > ap_block_state41_pp0_stage4_iter2;
    sc_signal< bool > ap_block_state46_pp0_stage4_iter3;
    sc_signal< bool > ap_block_state51_pp0_stage4_iter4;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<32> > grp_fu_138_p1;
    sc_signal< sc_lv<32> > tmp_6_reg_212;
    sc_signal< sc_lv<32> > pow_b_1_reg_217;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > a_reg_222;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state27;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<32> > ap_phi_mux_empty_phi_fu_73_p4;
    sc_signal< sc_lv<6> > ap_phi_mux_k_0_phi_fu_85_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > ap_phi_mux_pow_b_0_phi_fu_96_p4;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<5> > ap_phi_mux_i_0_phi_fu_107_p4;
    sc_signal< sc_logic > ap_CS_fsm_state74;
    sc_signal< sc_lv<32> > grp_fu_114_p0;
    sc_signal< sc_lv<32> > grp_fu_114_p1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_logic > ap_CS_fsm_state54;
    sc_signal< sc_lv<32> > grp_fu_126_p0;
    sc_signal< sc_lv<32> > grp_fu_126_p1;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > grp_fu_131_p0;
    sc_signal< sc_lv<32> > grp_fu_131_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state59;
    sc_signal< sc_lv<32> > grp_fu_138_p0;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<52> > ap_NS_fsm;
    sc_signal< bool > ap_block_state29_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state34_pp0_stage2_iter1;
    sc_signal< bool > ap_block_state39_pp0_stage2_iter2;
    sc_signal< bool > ap_block_state44_pp0_stage2_iter3;
    sc_signal< bool > ap_block_state49_pp0_stage2_iter4;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< bool > ap_block_state30_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state35_pp0_stage3_iter1;
    sc_signal< bool > ap_block_state40_pp0_stage3_iter2;
    sc_signal< bool > ap_block_state45_pp0_stage3_iter3;
    sc_signal< bool > ap_block_state50_pp0_stage3_iter4;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<52> ap_ST_fsm_state1;
    static const sc_lv<52> ap_ST_fsm_state2;
    static const sc_lv<52> ap_ST_fsm_state3;
    static const sc_lv<52> ap_ST_fsm_state4;
    static const sc_lv<52> ap_ST_fsm_state5;
    static const sc_lv<52> ap_ST_fsm_state6;
    static const sc_lv<52> ap_ST_fsm_state7;
    static const sc_lv<52> ap_ST_fsm_state8;
    static const sc_lv<52> ap_ST_fsm_state9;
    static const sc_lv<52> ap_ST_fsm_state10;
    static const sc_lv<52> ap_ST_fsm_state11;
    static const sc_lv<52> ap_ST_fsm_state12;
    static const sc_lv<52> ap_ST_fsm_state13;
    static const sc_lv<52> ap_ST_fsm_state14;
    static const sc_lv<52> ap_ST_fsm_state15;
    static const sc_lv<52> ap_ST_fsm_state16;
    static const sc_lv<52> ap_ST_fsm_state17;
    static const sc_lv<52> ap_ST_fsm_state18;
    static const sc_lv<52> ap_ST_fsm_state19;
    static const sc_lv<52> ap_ST_fsm_state20;
    static const sc_lv<52> ap_ST_fsm_state21;
    static const sc_lv<52> ap_ST_fsm_state22;
    static const sc_lv<52> ap_ST_fsm_state23;
    static const sc_lv<52> ap_ST_fsm_state24;
    static const sc_lv<52> ap_ST_fsm_state25;
    static const sc_lv<52> ap_ST_fsm_state26;
    static const sc_lv<52> ap_ST_fsm_pp0_stage0;
    static const sc_lv<52> ap_ST_fsm_pp0_stage1;
    static const sc_lv<52> ap_ST_fsm_pp0_stage2;
    static const sc_lv<52> ap_ST_fsm_pp0_stage3;
    static const sc_lv<52> ap_ST_fsm_pp0_stage4;
    static const sc_lv<52> ap_ST_fsm_state54;
    static const sc_lv<52> ap_ST_fsm_state55;
    static const sc_lv<52> ap_ST_fsm_state56;
    static const sc_lv<52> ap_ST_fsm_state57;
    static const sc_lv<52> ap_ST_fsm_state58;
    static const sc_lv<52> ap_ST_fsm_state59;
    static const sc_lv<52> ap_ST_fsm_state60;
    static const sc_lv<52> ap_ST_fsm_state61;
    static const sc_lv<52> ap_ST_fsm_state62;
    static const sc_lv<52> ap_ST_fsm_state63;
    static const sc_lv<52> ap_ST_fsm_state64;
    static const sc_lv<52> ap_ST_fsm_state65;
    static const sc_lv<52> ap_ST_fsm_state66;
    static const sc_lv<52> ap_ST_fsm_state67;
    static const sc_lv<52> ap_ST_fsm_state68;
    static const sc_lv<52> ap_ST_fsm_state69;
    static const sc_lv<52> ap_ST_fsm_state70;
    static const sc_lv<52> ap_ST_fsm_state71;
    static const sc_lv<52> ap_ST_fsm_state72;
    static const sc_lv<52> ap_ST_fsm_state73;
    static const sc_lv<52> ap_ST_fsm_state74;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1B;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<32> ap_const_lv32_BF800000;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_3F317218;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<5> ap_const_lv5_15;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<6> ap_const_lv6_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state54();
    void thread_ap_CS_fsm_state58();
    void thread_ap_CS_fsm_state59();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state74();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_state27_pp0_stage0_iter0();
    void thread_ap_block_state28_pp0_stage1_iter0();
    void thread_ap_block_state29_pp0_stage2_iter0();
    void thread_ap_block_state30_pp0_stage3_iter0();
    void thread_ap_block_state31_pp0_stage4_iter0();
    void thread_ap_block_state32_pp0_stage0_iter1();
    void thread_ap_block_state33_pp0_stage1_iter1();
    void thread_ap_block_state34_pp0_stage2_iter1();
    void thread_ap_block_state35_pp0_stage3_iter1();
    void thread_ap_block_state36_pp0_stage4_iter1();
    void thread_ap_block_state37_pp0_stage0_iter2();
    void thread_ap_block_state38_pp0_stage1_iter2();
    void thread_ap_block_state39_pp0_stage2_iter2();
    void thread_ap_block_state40_pp0_stage3_iter2();
    void thread_ap_block_state41_pp0_stage4_iter2();
    void thread_ap_block_state42_pp0_stage0_iter3();
    void thread_ap_block_state43_pp0_stage1_iter3();
    void thread_ap_block_state44_pp0_stage2_iter3();
    void thread_ap_block_state45_pp0_stage3_iter3();
    void thread_ap_block_state46_pp0_stage4_iter3();
    void thread_ap_block_state47_pp0_stage0_iter4();
    void thread_ap_block_state48_pp0_stage1_iter4();
    void thread_ap_block_state49_pp0_stage2_iter4();
    void thread_ap_block_state50_pp0_stage3_iter4();
    void thread_ap_block_state51_pp0_stage4_iter4();
    void thread_ap_block_state52_pp0_stage0_iter5();
    void thread_ap_block_state53_pp0_stage1_iter5();
    void thread_ap_condition_pp0_exit_iter0_state27();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_empty_phi_fu_73_p4();
    void thread_ap_phi_mux_i_0_phi_fu_107_p4();
    void thread_ap_phi_mux_k_0_phi_fu_85_p4();
    void thread_ap_phi_mux_pow_b_0_phi_fu_96_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_114_p0();
    void thread_grp_fu_114_p1();
    void thread_grp_fu_126_p0();
    void thread_grp_fu_126_p1();
    void thread_grp_fu_131_p0();
    void thread_grp_fu_131_p1();
    void thread_grp_fu_138_p0();
    void thread_i_fu_153_p2();
    void thread_icmp_ln15_fu_147_p2();
    void thread_k_fu_164_p2();
    void thread_y_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
